{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zkhan\\\\OneDrive\\\\Desktop\\\\my-app1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport mainLogo from './logo.png';\nimport Cookies from 'js-cookie';\nimport OpenAI from \"openai\";\nimport axios from \"axios\";\nimport mongoose from 'mongoose';\nimport Blog from \"./model/Blog.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"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\";\nmongoose.connect(\"mongodb+srv://zkhan1605:dNLW1dLC3u0rmy6s@ubcsciencecourse.ruqxbn2.mongodb.net/?retryWrites=true&w=majority&appName=ubcsciencecourse\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState(null);\n  const [value, setValue] = useState(null);\n  const openai = new OpenAI({\n    apiKey: API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n  const [items, setItems] = useState([]);\n  const [previousChat, setPreviousChats] = useState([]);\n  const article = new Blog({\n    title: 'Awesome Post!',\n    slug: 'awesome-post',\n    published: true,\n    content: 'This is the best post ever',\n    tags: ['featured', 'announcement']\n  });\n  useEffect(() => {\n    axios.get(\"/api/items\").then(response => setItems(response.data)).catch(error => console.error(error));\n  }, []);\n  const reset = () => {\n    setPreviousChats([]);\n    setMessage(null);\n    setValue(\"\");\n  };\n  const getMessages = async () => {\n    try {\n      const assistant = await openai.beta.assistants.retrieve(\"asst_9baNgmXjR1e9tFitiE9AYewq\");\n      const thread = await openai.beta.threads.create();\n      await openai.beta.threads.messages.create(thread.id, {\n        role: \"user\",\n        content: value\n      });\n      setMessage(value);\n      const run = await openai.beta.threads.runs.create(thread.id, {\n        assistant_id: assistant.id\n      });\n      await checkStatus(thread.id, run.id);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n        const messages = await openai.beta.threads.messages.list(threadId);\n        messages.data.forEach(msg => {\n          if (msg.role === 'assistant' && msg.content && msg.content.length > 0 && msg.content[0].text && msg.content[0].text.value) {\n            const assistantResponse = msg.content[0].text.value;\n            setPreviousChats(prevChats => [...prevChats, {\n              role: 'assistant',\n              content: assistantResponse\n            }]);\n          }\n        });\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n    }\n  }\n  useEffect(() => {\n    if (message && value) {\n      setPreviousChats(prevChats => [...prevChats, {\n        role: \"user\",\n        content: value\n      }, {\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: mainLogo,\n        height: 75\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The Frindly UBC Science Undergraduate Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        children: previousChat.map((chatMessage, index) => chatMessage.content && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message ${chatMessage.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"role\",\n            children: chatMessage.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: chatMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DJ8MOBvohnvqqP5o016YKCcxJ7I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mainLogo","Cookies","OpenAI","axios","mongoose","Blog","jsxDEV","_jsxDEV","API_KEY","connect","useNewUrlParser","useUnifiedTopology","App","_s","message","setMessage","value","setValue","openai","apiKey","dangerouslyAllowBrowser","items","setItems","previousChat","setPreviousChats","article","title","slug","published","content","tags","get","then","response","data","catch","error","console","reset","getMessages","assistant","beta","assistants","retrieve","thread","threads","create","messages","id","role","run","runs","assistant_id","checkStatus","threadId","runId","isComplete","runStatus","status","list","forEach","msg","length","text","assistantResponse","prevChats","Promise","resolve","setTimeout","className","children","src","height","fileName","_jsxFileName","lineNumber","columnNumber","map","chatMessage","index","onClick","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/zkhan/OneDrive/Desktop/my-app1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport mainLogo from './logo.png';\nimport Cookies from 'js-cookie';\nimport OpenAI from \"openai\";\nimport axios from \"axios\";\nimport mongoose from 'mongoose';\nimport Blog from \"./model/Blog.js\"\n\nconst API_KEY = \"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\"\n\nmongoose.connect(\"mongodb+srv://zkhan1605:dNLW1dLC3u0rmy6s@ubcsciencecourse.ruqxbn2.mongodb.net/?retryWrites=true&w=majority&appName=ubcsciencecourse\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\nconst App = () => {\n  const [message, setMessage] = useState(null)\n  const [value, setValue] = useState(null)\n  const openai = new OpenAI({apiKey: API_KEY,\n  dangerouslyAllowBrowser: true});\n  const [items, setItems] = useState([]);\n\n  const [previousChat, setPreviousChats] = useState([])\n\n  const article = new Blog({\n    title: 'Awesome Post!',\n    slug: 'awesome-post',\n    published: true,\n    content: 'This is the best post ever',\n    tags: ['featured', 'announcement'],\n  });\n  \n\n  useEffect(() => {\n    axios.get(\"/api/items\")\n      .then(response => setItems(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n\n  \n  const reset = () => {\n    setPreviousChats([])\n    setMessage(null);\n    setValue(\"\")\n  }\n\n\n  const getMessages = async () => {\n    try {\n      const assistant = await openai.beta.assistants.retrieve(\"asst_9baNgmXjR1e9tFitiE9AYewq\");\n      const thread = await openai.beta.threads.create();\n      await openai.beta.threads.messages.create(\n        thread.id,\n        {\n          role: \"user\",\n          content: value\n        }\n      );\n\n      setMessage(value)\n  \n      const run = await openai.beta.threads.runs.create(\n        thread.id,\n        { \n          assistant_id: assistant.id\n        }\n      );\n  \n      await checkStatus(thread.id, run.id);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  }\n  \n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n        const messages = await openai.beta.threads.messages.list(threadId);\n        messages.data.forEach((msg) => {\n          if (msg.role === 'assistant' && msg.content && msg.content.length > 0 && msg.content[0].text && msg.content[0].text.value) {\n            const assistantResponse = msg.content[0].text.value;\n            setPreviousChats(prevChats => [\n              ...prevChats,\n              { role: 'assistant', content: assistantResponse }\n            ]);\n          }\n        });\n      } else {\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (message && value){\n      setPreviousChats(prevChats => (\n        [...prevChats,\n        {\n          role: \"user\",\n          content: value\n        },\n        {\n          role: message.role,\n          content: message.content\n        }\n      ]\n      ))\n    }\n  }, [message])\n\n\n  return (\n    <div className=\"app\">\n      <div className='top-section'>\n      <img src={mainLogo} height={75}></img>\n      <h3>The Frindly UBC Science Undergraduate Chatbot</h3>\n      </div>\n      <section className=\"main\">\n      <ul className='feed'>\n        {previousChat.map((chatMessage, index) => chatMessage.content && (\n          <li key={index} className={`message ${chatMessage.role}`}>\n            <p className='role'>{chatMessage.role}</p>\n            <p>{chatMessage.content}</p>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"bottom-section\">\n\n      <div className=\"input-container\">\n        <button onClick={reset}>Reset</button>\n        <input value = {value} onChange={(e) => setValue(e.target.value)}/>\n        <div id=\"submit\" onClick={getMessages} >➢</div>\n      </div>\n          <p className=\"info\"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n      </div>\n      </section>\n    </div>\n  )\n}\n\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}