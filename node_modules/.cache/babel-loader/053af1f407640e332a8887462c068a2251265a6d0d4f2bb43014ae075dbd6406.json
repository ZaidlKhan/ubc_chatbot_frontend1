{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zkhan\\\\OneDrive\\\\Desktop\\\\my-app1\\\\src\\\\App.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport mainLogo from './logo.png';\nimport Cookies from 'js-cookie';\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"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\";\nconst openai = new OpenAI({\n  apiKey: API_KEY,\n  dangerouslyAllowBrowser: true\n});\nconst App = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const [previousChats, setPreviousChats] = useState([]);\n  const reset = async () => {\n    const threadId = Cookies.get('threadId');\n    if (threadId) {\n      try {\n        await axios.post(`/api/threads/${threadId}/reset`);\n        setPreviousChats([]);\n        setValue(\"\");\n      } catch (error) {\n        console.error('Error resetting the thread:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchThreadMessages = async threadId => {\n      try {\n        const response = await axios.get(`/api/threads/${threadId}`);\n        const {\n          messages\n        } = response.data;\n        if (messages && messages.length > 0) {\n          setPreviousChats(messages.map(message => ({\n            role: message.role,\n            content: message.content\n          })));\n        }\n      } catch (error) {\n        console.error('Error fetching thread messages:', error);\n      }\n    };\n    let threadId = Cookies.get('threadId');\n    if (threadId) {\n      fetchThreadMessages(threadId);\n    } else {\n      createNewThread().then(newThreadId => {\n        Cookies.set('threadId', newThreadId, {\n          expires: 365\n        });\n        setPreviousChats([]);\n      }).catch(error => console.error('Error creating thread:', error));\n    }\n  }, []);\n  const createNewThread = async () => {\n    try {\n      const thread = await openai.beta.threads.create();\n      await axios.post('/api/create-thread', {\n        thread_id: thread.id\n      });\n      Cookies.set('threadId', thread.id, {\n        expires: 365\n      });\n      return thread.id;\n    } catch (error) {\n      console.error('Error creating thread or communicating with backend:', error);\n    }\n  };\n  const getMessages = async () => {\n    if (!value) return;\n    const threadId = Cookies.get('threadId');\n    if (!threadId) {\n      console.error('No thread ID found.');\n      return;\n    }\n    const userMessage = {\n      role: 'user',\n      content: value\n    };\n    setPreviousChats(prevChats => [...prevChats, userMessage]);\n    setValue(\"\");\n    try {\n      await axios.post(`/api/threads/${threadId}/add-message`, userMessage);\n      const assistant = await openai.beta.assistants.retrieve(\"asst_9baNgmXjR1e9tFitiE9AYewq\");\n      await openai.beta.threads.messages.create(threadId, {\n        role: \"user\",\n        content: value\n      });\n      const run = await openai.beta.threads.runs.create(threadId, {\n        assistant_id: assistant.id\n      });\n      await checkStatus(threadId, run.id);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n        const messages = await openai.beta.threads.messages.list(threadId);\n        console.log(messages);\n        const assistantMessage = {\n          role: 'assistant',\n          content: messages.data[0].content[0].text.value\n        };\n        await axios.post(`/api/threads/${threadId}/add-message`, assistantMessage);\n        setPreviousChats(prevChats => [...prevChats, assistantMessage]);\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: mainLogo,\n        alt: \"Main Logo\",\n        height: 75\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The Friendly UBC Science Undergraduate Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        children: previousChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message ${chat.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"role\",\n            children: chat.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: chat.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y7YKrHKyQWd426fIoY1i8DJswJo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","mainLogo","Cookies","OpenAI","jsxDEV","_jsxDEV","API_KEY","openai","apiKey","dangerouslyAllowBrowser","App","_s","value","setValue","previousChats","setPreviousChats","reset","threadId","get","post","error","console","fetchThreadMessages","response","messages","data","length","map","message","role","content","createNewThread","then","newThreadId","set","expires","catch","thread","beta","threads","create","thread_id","id","getMessages","userMessage","prevChats","assistant","assistants","retrieve","run","runs","assistant_id","checkStatus","runId","isComplete","runStatus","status","list","log","assistantMessage","text","Promise","resolve","setTimeout","className","children","src","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","chat","index","onClick","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/zkhan/OneDrive/Desktop/my-app1/src/App.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport mainLogo from './logo.png';\nimport Cookies from 'js-cookie';\nimport OpenAI from \"openai\";\n\n\nconst API_KEY = \"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\"\n\nconst openai = new OpenAI({apiKey: API_KEY,\n  dangerouslyAllowBrowser: true});\n\n\nconst App = () => {\n  const [value, setValue] = useState('');\n  const [previousChats, setPreviousChats] = useState([]);\n\n  const reset = async () => {\n    const threadId = Cookies.get('threadId');\n    if (threadId) {\n      try {\n        await axios.post(`/api/threads/${threadId}/reset`);\n        setPreviousChats([]);\n        setValue(\"\");\n      } catch (error) {\n        console.error('Error resetting the thread:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchThreadMessages = async (threadId) => {\n      try {\n        const response = await axios.get(`/api/threads/${threadId}`);\n        const { messages } = response.data;\n        if (messages && messages.length > 0) {\n          setPreviousChats(messages.map(message => ({\n            role: message.role,\n            content: message.content\n          })));\n        }\n      } catch (error) {\n        console.error('Error fetching thread messages:', error);\n      }\n    };\n  \n    let threadId = Cookies.get('threadId');\n    \n    if (threadId) {\n      fetchThreadMessages(threadId);\n    } else {\n      createNewThread().then((newThreadId) => {\n        Cookies.set('threadId', newThreadId, { expires: 365 });\n        setPreviousChats([]);\n      }).catch(error => console.error('Error creating thread:', error));\n    }\n  }, []);\n  \n  const createNewThread = async () => {\n    try {\n      const thread = await openai.beta.threads.create();\n      await axios.post('/api/create-thread', { thread_id: thread.id });\n      Cookies.set('threadId', thread.id, { expires: 365 });\n      return thread.id;\n    } catch (error) {\n      console.error('Error creating thread or communicating with backend:', error);\n    }\n  };\n  \n  const getMessages = async () => {\n    if (!value) return;\n    const threadId = Cookies.get('threadId');\n    if (!threadId) {\n      console.error('No thread ID found.');\n      return;\n    }\n    const userMessage = { role: 'user', content: value };\n    setPreviousChats(prevChats => [...prevChats, userMessage]);\n    setValue(\"\"); \n    try {\n      await axios.post(`/api/threads/${threadId}/add-message`, userMessage);\n  \n      const assistant = await openai.beta.assistants.retrieve(\"asst_9baNgmXjR1e9tFitiE9AYewq\");\n      await openai.beta.threads.messages.create(threadId, { role: \"user\", content: value });\n  \n      const run = await openai.beta.threads.runs.create(threadId, { assistant_id: assistant.id });\n      await checkStatus(threadId, run.id);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  \n\n  async function checkStatus(threadId, runId) {\n    let isComplete = false;\n    while (!isComplete) {\n      const runStatus = await openai.beta.threads.runs.retrieve(threadId, runId);\n      if (runStatus.status === \"completed\") {\n        isComplete = true;\n        const messages = await openai.beta.threads.messages.list(threadId);\n        console.log(messages)\n        const assistantMessage = {\n          role: 'assistant',\n          content: messages.data[0].content[0].text.value\n        };\n        await axios.post(`/api/threads/${threadId}/add-message`, assistantMessage);\n  \n        setPreviousChats(prevChats => [\n          ...prevChats,\n          assistantMessage\n        ]);\n      } else {\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n      }\n    }\n  }\n\n\n  return (\n    <div className=\"app\">\n      <div className='top-section'>\n        <img src={mainLogo} alt=\"Main Logo\" height={75} />\n        <h3>The Friendly UBC Science Undergraduate Chatbot</h3>\n      </div>\n      <section className=\"main\">\n        <ul className='feed'>\n          {previousChats.map((chat, index) => (\n            <li key={index} className={`message ${chat.role}`}>\n              <p className='role'>{chat.role}</p>\n              <p>{chat.content}</p>\n            </li>\n          ))}\n        </ul>\n        <div className=\"bottom-section\">\n          <div className=\"input-container\">\n            <button onClick={reset}>Reset</button>\n            <input value={value} onChange={(e) => setValue(e.target.value)} />\n            <div id=\"submit\" onClick={getMessages}>➢</div>\n          </div>\n          <p className=\"info\"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}